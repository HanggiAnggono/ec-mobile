// This file is auto-generated by scripts/openapi-react-query.ts
// Do not edit this file directly.

import { apiClient } from '@/module/core'
import type { operations } from '@/shared/types/api'
import { OpenapiQueryClient } from "openapi-react-query"

export const useAppGetHello = () => {
    return apiClient.useQuery('get', '/' as const)
  }

export const useProductsFindAll = () => {
    return apiClient.useQuery('get', '/products' as const)
  }

export const useProductsCreate = () => {
    return apiClient.useMutation('post', '/products' as const)
  }

export const useProductsFindOne = (
        params: operations['ProductsController_findOne']['parameters'],
        options: Parameters<OpenapiQueryClient<'get', '/products/{id}'>['useQuery']>['2']
      ) => {
    return apiClient.useQuery('get', '/products/{id}' as const, {params}, options)
  }

export const useProductsRemove = () => {
    return apiClient.useMutation('delete', '/products/{id}' as const)
  }

export const useProductsUpdate = () => {
    return apiClient.useMutation('patch', '/products/{id}' as const)
  }

export const useProductsAddVariant = () => {
    return apiClient.useMutation('post', '/products/{id}/variants' as const)
  }

export const useProductsUpdateVariant = () => {
    return apiClient.useMutation('put', '/products/variants/{variantId}' as const)
  }

export const useProductCategoryFindAll = () => {
    return apiClient.useQuery('get', '/product-category' as const)
  }

export const useProductCategoryCreate = () => {
    return apiClient.useMutation('post', '/product-category' as const)
  }

export const useProductCategoryFindOne = (
        params: operations['ProductCategoryController_findOne']['parameters'],
        options: Parameters<OpenapiQueryClient<'get', '/product-category/{id}'>['useQuery']>['2']
      ) => {
    return apiClient.useQuery('get', '/product-category/{id}' as const, {params}, options)
  }

export const useProductCategoryRemove = () => {
    return apiClient.useMutation('delete', '/product-category/{id}' as const)
  }

export const useProductCategoryUpdate = () => {
    return apiClient.useMutation('patch', '/product-category/{id}' as const)
  }

export const useUserFindAll = () => {
    return apiClient.useQuery('get', '/user' as const)
  }

export const useUserCreate = () => {
    return apiClient.useMutation('post', '/user' as const)
  }

export const useUserFindOne = (
        params: operations['UserController_findOne']['parameters'],
        options: Parameters<OpenapiQueryClient<'get', '/user/{id}'>['useQuery']>['2']
      ) => {
    return apiClient.useQuery('get', '/user/{id}' as const, {params}, options)
  }

export const useUserRemove = () => {
    return apiClient.useMutation('delete', '/user/{id}' as const)
  }

export const useUserUpdate = () => {
    return apiClient.useMutation('patch', '/user/{id}' as const)
  }

export const useOrderFindAll = () => {
    return apiClient.useQuery('get', '/order' as const)
  }

export const useOrderCreate = () => {
    return apiClient.useMutation('post', '/order' as const)
  }

export const useOrderFindOne = (
        params: operations['OrderController_findOne']['parameters'],
        options: Parameters<OpenapiQueryClient<'get', '/order/{id}'>['useQuery']>['2']
      ) => {
    return apiClient.useQuery('get', '/order/{id}' as const, {params}, options)
  }

export const useOrderRemove = () => {
    return apiClient.useMutation('delete', '/order/{id}' as const)
  }

export const useOrderUpdate = () => {
    return apiClient.useMutation('patch', '/order/{id}' as const)
  }

export const useCartGetCart = () => {
    return apiClient.useQuery('get', '/cart' as const)
  }

export const useCartClearCart = () => {
    return apiClient.useMutation('delete', '/cart' as const)
  }

export const useCartAddToCart = () => {
    return apiClient.useMutation('post', '/cart/items' as const)
  }

export const useCartRemoveCartItem = () => {
    return apiClient.useMutation('delete', '/cart/items/{id}' as const)
  }

export const useCartUpdateCartItem = () => {
    return apiClient.useMutation('patch', '/cart/items/{id}' as const)
  }

export const useCartMergeGuestCart = () => {
    return apiClient.useMutation('post', '/cart/merge' as const)
  }

export const useCartCheckoutCart = () => {
    return apiClient.useMutation('post', '/cart/{sessionId}/checkout' as const)
  }

export const useAuthSignup = () => {
    return apiClient.useMutation('post', '/auth/signup' as const)
  }

export const useAuthLogin = () => {
    return apiClient.useMutation('post', '/auth/login' as const)
  }

export const usePaymentCreatePayment = () => {
    return apiClient.useMutation('post', '/payment' as const)
  }